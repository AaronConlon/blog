{"pageProps":{"post":{"slug":"Swift初体验","content":"\n用最快的速度，了解、学习、上手`Swift`！\n\n### 基础\n\n#### 注释\n\n```swift\n// something\n\n/* 首行\n/* 内部嵌套 */\n尾行*/\n\n/*多行\n注释*/\n\n```\n\n#### 分号\n\n期望在一行中执行多段代码，可以添加分号。分号不是必须的，跟`JavaScript`一样\n\n```swift\nlet cat = \"🐱\";print(cat)\n// Prints \"🐱\"\n```\n\n#### 简单值\n\n```swift\n// 变量\nvar count = 2\ncount = 3\n// 常量\nlet count = 999\n// 空值\nnil\n// 数据类型\nlet explicitDouble: Double = 70\n// 可选值\nlet name: String? = 'Aaron' \nlet sex: String? = nil\n// 同类型变量，同时声明\nvar red, green, blue: Double\n// 变量名几乎支持所有字符\nlet π = 3.14159\nlet 你好 = \"你好世界\"\nlet 🐶🐮 = \"dogcow\"\n```\n\n> 值不会隐式转换！\n\n#### 布尔值\n\n```swift\nlet isOk = false\nlet isAlone = true\n```\n\n错误的布尔值用法示例：\n\n```swift\nlet i = 1\nif i {\n    // this example will not compile, and will report an error\n}\n```\n\n#### 元组\n\n```swift\nlet http404Error = (404, 'Not Found')\n// http404Error is of type (Int, String), and equals (404, \"Not Found\")\n\n// read\nlet (statusCode, statusMessage) = http404Error\nprint(\"The status code is \\(statusCode)\")\n// Prints \"The status code is 404\"\nprint(\"The status message is \\(statusMessage)\")\n// Prints \"The status message is Not Found\"\n\n// ignore something\nlet (justTheStatusCode, _) = http404Error\nprint(\"The status code is \\(justTheStatusCode)\")\n// Prints \"The status code is 404\"\n\n// access by index\nprint(\"The status code is \\(http404Error.0)\")\n// Prints \"The status code is 404\"\nprint(\"The status message is \\(http404Error.1)\")\n// Prints \"The status message is Not Found\"\n\n// 定义元组名\nlet http200Status = (statusCode: 200, description: \"OK\")\n// 使用属性字段读取\nprint(\"The status code is \\(http200Status.statusCode)\")\n// Prints \"The status code is 200\"\nprint(\"The status message is \\(http200Status.description)\")\n// Prints \"The status message is OK\"\n```\n\n#### 整数\n\n如下整数类型：\n\n- UInt8\n- UInt32\n- ...\n\n无符号：`unsigned`整数类型具有显式的范围。\n\n```swift\nlet minValue = UInt8.min  // minValue is equal to 0, and is of type UInt8\nlet maxValue = UInt8.max  // maxValue is equal to 255, and is of type UInt8\n```\n\n显式的`Int/UInt`在不同位数的机器上能标识的数字范围取决于机器的位数。\n\n在`32-bit`平台，`Int`等同于`Int32`，在`64-bit`平台，则等同于`Int64`。\n\n#### 浮点数\n\n- `Double` represents a 64-bit floating-point number.\n- `Float` represents a 32-bit floating-point number.\n\n#### 进制\n\n```swift\nlet decimalInteger = 17\nlet binaryInteger = 0b10001       // 17 in binary notation\nlet octalInteger = 0o21           // 17 in octal notation\nlet hexadecimalInteger = 0x11     // 17 in hexadecimal notation\n```\n\n#### 指数\n\n- `1.25e2` means 1.25 x 102, or `125.0`.\n- `1.25e-2` means 1.25 x 10-2, or `0.0125`.\n\n#### 数字的显式转换\n\n使用类创建新数据的实例来转换。\n\n```swift\nlet cannotBeNegative: UInt8 = -1\n// UInt8 can't store negative numbers, and so this will report an error\nlet tooBig: Int8 = Int8.max + 1\n// Int8 can't store a number larger than its maximum value,\n// and so this will also report an error\n\nlet twoThousand: UInt16 = 2_000\nlet one: UInt8 = 1\nlet twoThousandAndOne = twoThousand + UInt16(one)\n\nlet three = 3\nlet pointOneFourOneFiveNine = 0.14159\nlet pi = Double(three) + pointOneFourOneFiveNine\n// pi equals 3.14159, and is inferred to be of type Double\n```\n\n#### 类型别名\n\n```swift\ntypealias AudioSample = UInt16\nvar maxAmplitudeFound = AudioSample.min\n// maxAmplitudeFound is now 0\n```\n\n#### 显式转换值\n\n```swift\nlet label = \"The width is \"\nlet width = 94\nlet widthLabel = label + String(width)\n```\n\n#### 插值转换\n\n```swift\nlet apples = 3\nlet oranges = 5\nlet appleSummary = \"I have \\(apples) apples.\"\nlet fruitSummary = \"I have \\(apples + oranges) pieces of fruit.\"\n```\n\n#### 多行字符串\n\n```swift\nlet quotation = \"\"\"\nI said \"I have \\(apples) apples.\"\nAnd then I said \"I have \\(apples + oranges) pieces of fruit.\"\n\"\"\"\n```\n\n#### 数组和字典\n\n初始化空数组和字典：\n\n```swift\nlet emptyArray: [String] = []\nlet emptyDictionary: [String: Float] = [:]\n```\n\n有值数组和字典：\n\n```swift\nvar shoppingList = [\"catfish\", \"water\", \"tulips\"]\nshoppingList[1] = \"bottle of water\"\n\nvar occupations = [\n    \"Malcolm\": \"Captain\",\n    \"Kaylee\": \"Mechanic\",\n]\noccupations[\"Jayne\"] = \"Public Relations\"\n```\n\n#### 控制流\n\n组合遍历和条件语句示例：\n\n```swift\nlet individualScores = [75, 43, 103, 87, 12]\nvar teamScore = 0\nfor score in individualScores {\n    if score > 50 {\n        teamScore += 3\n    } else {\n        teamScore += 1\n    }\n}\nprint(teamScore)\n// Prints \"11\"\n```\n\n**Switch**语句：\n\n```swift\nlet vegetable = \"red pepper\"\nswitch vegetable {\ncase \"celery\":\n    print(\"Add some raisins and make ants on a log.\")\n// 多值匹配\ncase \"cucumber\", \"watercress\":\n    print(\"That would make a good tea sandwich.\")\n// 条件匹配，区域变量\ncase let x where x.hasSuffix(\"pepper\"):\n    print(\"Is it a spicy \\(x)?\")\n// 区间匹配\ncase 1..<5:\n  \tprint('1~5')\ndefault:\n    print(\"Everything tastes good in soup.\")\n}\n// Prints \"Is it a spicy red pepper?\"\n```\n\n> switch 必须包含所有可能的 case，不需要`break`，支持`fallthrough`贯穿\n\n```swift\nlet somePoint = (1,1)\nswitch somePoint {\n  case (0,0)\n     print(\"fail\")\n  case (1,_)\n     print(\"success\")\n  default:\n     print(\"no match\")\n}\n// print：success\n```\n\n**For..in**循环遍历数组和字典：\n\n```swift\nlet interestingNumbers = [\n    \"Prime\": [2, 3, 5, 7, 11, 13],\n    \"Fibonacci\": [1, 1, 2, 3, 5, 8],\n    \"Square\": [1, 4, 9, 16, 25],\n]\nvar largest = 0\nfor (_, numbers) in interestingNumbers {\n    for number in numbers {\n        if number > largest {\n            largest = number\n        }\n    }\n}\nprint(largest)\n// Prints \"25\"\n```\n\n`while循环`：\n\n```swift\nvar n = 2\nwhile n < 100 {\n    n *= 2\n}\nprint(n)\n// Prints \"128\"\n\nvar m = 2\nrepeat {\n    m *= 2\n} while m < 100\nprint(m)\n// Prints \"128\"\n```\n\n系列索引循环：\n\n```swift\nvar total = 0\nfor i in 0..<4 {\n    total += i\n}\nprint(total)\n// Prints \"6\"\n```\n\n#### 函数和递归\n\n> Functions are a first-class type.\n\n定义和调用：\n\n> 不同于JavaScript，函数传参要指定参数名\n\n```swift\nfunc greet(person: String, day: String) -> String {\n  return \"Hi \\(person), today is \\(day)\"\n}\ngreet(person: 'aaron', day: 'Monday')\n```\n\n甚至是参数别名：\n\n> `_`占位符，用于表示通用别名\n\n```swift\nfunc greet(_ person: String, on day: String) -> String {\n    return \"Hello \\(person), today is \\(day).\"\n}\ngreet(\"John\", on: \"Wednesday\")\n```\n\n函数可以返回元组(`Tuple`)，取值非常自由和灵活：\n\n```swift\nfunc calculateStatistics(scores: [Int]) -> (min: Int, max: Int, sum: Int) {\n    var min = scores[0]\n    var max = scores[0]\n    var sum = 0\n\n    for score in scores {\n        if score > max {\n            max = score\n        } else if score < min {\n            min = score\n        }\n        sum += score\n    }\n\n    return (min, max, sum)\n}\nlet statistics = calculateStatistics(scores: [5, 3, 100, 3, 9])\n// 元组变量名或下标\nprint(statistics.sum)\n// Prints \"120\"\nprint(statistics.2)\n// Prints \"120\"\n```\n\n**嵌套函数**：\n\n```swift\nfunc returnFifteen() -> Int {\n    var y = 10\n    func add() {\n        y += 5\n    }\n    add()\n    return y\n}\nreturnFifteen()\n```\n\n**函数作为返回值**：\n\n```swift\nfunc makeIncrementer() -> ((Int) -> Int) {\n    func addOne(number: Int) -> Int {\n        return 1 + number\n    }\n    return addOne\n}\nvar increment = makeIncrementer()\nincrement(7)\n```\n\n**函数作为参数传入：**\n\n```swift\nfunc hasAnyMatches(list: [Int], condition: (Int) -> Bool) -> Bool {\n    for item in list {\n        if condition(item) {\n            return true\n        }\n    }\n    return false\n}\nfunc lessThanTen(number: Int) -> Bool {\n    return number < 10\n}\nvar numbers = [20, 19, 7, 12]\nhasAnyMatches(list: numbers, condition: lessThanTen)\n```\n\n> 函数可以无返回值，此时不必声明返回值类型\n\n","title":"前端工具库","date":"2022/4/4","tags":["Swift"],"mainImg":"https://images.unsplash.com/photo-1496171367470-9ed9a91ea931?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2NDk5NTg5MDA&ixlib=rb-1.2.1&q=80&w=1080","coverImg":"https://images.unsplash.com/photo-1496171367470-9ed9a91ea931?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2NDk5NTg5MDA&ixlib=rb-1.2.1&q=80&w=400","intro":"想要开发原生的 macOS 桌面程序，学习 Swift 是我的第一步。"}},"__N_SSG":true}