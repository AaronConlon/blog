{"pageProps":{"post":{"slug":"使用适宜的标签增强HTML整体语义化","content":"\n所有的 web 开发者都知道 `HTML`，但是大多数开发者并不重视，甚至可以说是轻视了`HTML`。大多数的开发者能够轻松编写可用的`HTML`结构，并且把重心放在了其他方面，例如调整`CSS`和优化`JS`，而忽视了编写现代的，具有良好访问性和语义的`HTML`结构的重要性。\n\nweb 技术在持续发展，`HTML`也有一些新增的内容需要我们学习，使用这些新特性和新知识，能够从多个方面来优化我们的应用，例如：\n\n- SEO 优化\n- 良好结构具有良好的可读性\n- 访问性得到增强，对于某些需要无障碍功能的用户更友好\n- 新增的一些标签可以带来一些功能和样式增强，避免开发者编写自定义的额外代码。\n\n举个例子，`div`和`span`标签通常被用于一些布局结构，但它们并没有相关的语义，我们应该寻求更好的语义化标签，如果不行，也可以为其设定`role`属性，指定一个语义化值。\n\n### 语义化标签的使用场景\n\n为了更好地展示语义化增强的`HTML`结构，我将列出可能的文档结构及其使语义化标签示例。\n\n##### 整体结构\n\n首先，让我们来看看一个具有良好语义化的页面结构（这只是一个参考示例，在实际应用中并没有严格的使用规定）。\n\n```html\n<header>...</header>\n<main>\n  <nav>...</nav>\n  <h1>...</h1>\n  <section>\n    <article>\n   \t\t<p>\n        It is <em>relevant</em>, but this is <strong>much more</strong>.\nThis is rather <small>unimportant</small>, though\n      </p> \n    </article>\n  </section>\n  <section>\n    <article>...</article>\n    <article>...</article>\n  </section>\n  <aside>...</aside>\n</main>\n<footer>...</footer>\n```\n\n#### 文本优先级\n\n上述结构中，`p`标签内的文本在语义上具有不同的重要性级别。\n\n文本的强调程度：`small` 最小，其次是常规文本，然后是`em`标签，最后是`strong`标签，如果我们的文本有着明确的重要性指标，则应该优先使用强调程度高的标签。\n\n#### 文本修正\n\n再看看下面这个文本修正的示例：\n\n```html\nIn the end, I was <del>wrong</del><ins>right</ins>\n```\n\n`del` 和`ins`配合得很好，很好的表现了修正文本`wrong`到`right`的语义。\n\n#### 联系信息\n\n如果我们有一个个人或者公司的联系信息，例如联系方式、联系人、电话或者邮件地址等，都可以使用`address`标签。\n\n```html\n<address>\n  E-mail: <a href=\"mailto:me@mail.me\">me@mail.me</a>\n  Carrot Street, 42 - 01010 My City\n</address>\n```\n\n#### 时间和日期\n\n示例如下：\n\n```html\nPublished: <time datetime=\"2020-12-20T20:00:00\">Dec. 20th</time>\n```\n\n推荐使用`time`标签表明这是一个时间信息，并且使用人类易读的`text`文本作为描述，而使用`datetime`属性和一个机器易读的值。\n\n#### 引用和参考信息\n\n```html\nMy uncle said, <q cite=\"https://myuncle.org/famous-quotes\">That's life, kid</q>\n<blockquote>\n  <p>That's life, kids. Roll with it.</p>\n  <cite>\n    <a href=\"https://myuncle.org/famous-quotes\">Famous quotes</a>, by my uncle\n  </cite>\n</blockquote>\n```\n\n上述示例中，行内嵌套时使用`q`标签（通常会自动加上引号），块级引用则使用`blockquote`，而`cite`标签则表明引用的来源信息。\n\n#### 文本方向\n\n```html\n<p>This paragraph will go left-to-right.</p>  \n<p><bdo dir=\"rtl\">This paragraph will go right-to-left.</bdo></p>  \n```\n\n指明文本方向，这在某些特殊场景下很有用。\n\n#### 按键输入和代码样本\n\n```html\nWhen things seem bleak, just press <kbd>Alt</kbd> + <kbd>F4</kbd>\nThe computer will not say <samp>Access denied</samp> anymore, yay!\n```\n\n`kbd`用于标识按键输入，这在一些表明快捷键的场景下很有用，`samp`则表示这是计算机程序代码（也可以使用`code`）。\n\n#### 标记和高亮\n\n<p>This is very important and should be <mark>marked</mark></p>\n\n上述`marked`的代码是：\n\n```html\nThis is very important and should be <mark>marked</mark>\n```\n\n`mark`用于标记和高亮关键内容。\n\n#### 计算结果\n\n```html\n<form ...>\n  Enter age: <input type=\"range\" min=\"0\" value=\"27\">\n  <output>You are good to go!</output>\n</form>\n```\n\n`output`标签表明这是一个计算结果，例如某云服务器选购后计价展示价格结果使用`output`标签。\n\n#### 自定义列表\n\n```html\n<dl>\n  <dt>Mario</dt>\n  <dd>An Italian plumber that wears red.</dd>\n  <dt>Luigi</dt>\n  <dd>An Italian plumber that wears green.</dd>\n</dl>\n<p><dfn>Mario</dfn> is an Italian plumber that wears red</p>\n```\n\n`dl`是一个定义列表，跟有序和无序列表不同的是，定义列表支持`dt`描述列表标题，`dd`则表述其内容，一个定义列表只支持一个`dt`（如果内部用`div`拆分，则每一个`div`内部支持单独的`dt`和`dd`），浏览器对定义列表有默认的样式，定义内容具有缩进（不要为了缩进而使用此标签）。\n\n#### 标签的数据\n\n```html\n<data value=\"user-123\">Bob</data> and\n<data value=\"user-456\">Jim</data>\n```\n\n`data`标签的`value`属性和值可以被读取，但是在页面是不会显示的。也就是说，`value`的值是机器可读的，而`text`是为了让用户可见的。\n\n除了`data`标签具有此特性，`HTML5`还让所有标签具有`data-*`属性：\n\n```html\n<ul>\n  <li onclick=\"showDetails(this)\" id=\"owl\" data-animal-type=\"bird\">Owl</li>\n  <li onclick=\"showDetails(this)\" id=\"salmon\" data-animal-type=\"fish\">Salmon</li>  \n  <li onclick=\"showDetails(this)\" id=\"tarantula\" data-animal-type=\"spider\">Tarantula</li>  \n</ul>\n```\n\n我们可以通过`js`获取元素的`data-*`值，而在页面上这被视为机器可读而用户不可见的。\n\n#### 语义和功能聚合的标签\n\n类似`img`或者`video`这些标签，语义和特定的功能是聚合在一起的。常用的此类标签之外，还有几个常被人忽视的标签：\n\n- `details`： 适用于定义一个可以手动点击展开和隐藏的详细信息区，`summary`标签嵌套于内部作为提示信息。\n\n```html\n<details>\n    <summary>Details</summary>\n    Something small enough to escape casual notice.\n</details>\n```\n\n- `figure`配合`figcaption`指定一个元素（图片、视频、代码等）的标题\n\n```html\n<figure>\n  <img src=\"demo.jpg\" alt=\"Trulli\" style=\"width:100%\">\n  <figcaption>Fig.1 - Trulli, Puglia, Italy.</figcaption>\n</figure>\n```\n\n- `picture` 和 `source`： 提供一个更灵活的图片资源，通常可以配合`media`属性指定媒体查询条件下的资源地址，某种意义上可以理解为备选或者特定场景下修改`img`的`src`属性以显示更适宜的图片。\n\n```html\n<picture>\n    <source srcset=\"/media/cc0-images/surfer-240-200.jpg\"\n            media=\"(min-width: 800px)\">\n    <img src=\"/media/cc0-images/painted-hand-298-332.jpg\" alt=\"\" />\n</picture>\n```\n\n- `ruby`和`rt`：用于日文注音或中文注音（`<rp>`：定义不支持 ruby 元素的浏览器所显示的内容）\n\n```html\n<ruby>\n漢 <rp>(</rp><rt>kan</rt><rp>)</rp>\n字 <rp>(</rp><rt>ji</rt><rp>)</rp>\n</ruby>\n```\n\n- `meter`：度量衡，某些具有度量意义的数据需要展示的时候可用。\n- `progress`：进度条，展示可变进度可用。\n\n\n\n### 写在最后\n\n最后，希望大家喜欢本文的内容，\u0010学习和应用新的知识可以提高我们的代码质量，但这并不是全部，本文旨在抛砖引玉，再会。\n","title":"2021年：使用适宜的标签增强 HTML 整体语义化","date":"2021/5/29","tags":["HTML"],"mainImg":"https://images.unsplash.com/photo-1471440671318-55bdbb772f93?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2MjIzMDA2MTc&ixlib=rb-1.2.1&q=80&w=1080","coverImg":"https://images.unsplash.com/photo-1471440671318-55bdbb772f93?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2MjIzMDA2MTc&ixlib=rb-1.2.1&q=80&w=400","intro":"HTML 是与时俱进的，我们应该时刻保持技术的敏感度，了解新技术和新知识，并且应用在日常开发之中。"}},"__N_SSG":true}