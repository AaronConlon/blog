{"pageProps":{"post":{"slug":"多终端下的代理设置","contentHtml":"<p><img src=\"https://images.unsplash.com/photo-1605918321371-584f5deab0a2?ixlib=rb-1.2.1&#x26;ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&#x26;auto=format&#x26;fit=crop&#x26;w=1951&#x26;q=80\" alt=\"\"></p>\n<p>我很喜欢命令行终端,使用喜欢的<code>shell</code> 进行日常的开发和工作非常有趣且高效.对于终端使用,始终绕不过一个问题:<code>网络代理</code>.</p>\n<p>为了更快地下载一些国外资源,我们需要为自己的<code>terminal</code>配置网络代理.接下来就让我给大家分享几个我使用过的<code>shell</code>的代理设置的知识.</p>\n<h2>TOS</h2>\n<ul>\n<li>Bash / Zsh</li>\n<li>Powershell / CMD</li>\n<li>FIsh</li>\n<li>Git or NPM</li>\n</ul>\n<h2>1. Bash / Zsh</h2>\n<p>得益于多数<code>Linux</code>发行版自带<code>Bash</code>的原因,使用 Bash 的用户数量庞大.而<code>Zsh</code>自走入开发者们的视线以来,用户量急速增长,并且口碑良好.</p>\n<p><code>bash</code>的默认配置文件是<code>~/.bashrc</code>,<code>zsh</code>的默认配置文件是<code>~/.zshrc</code>,二者设置代理的方法是一致的,只需要在各自的配置文件增加两个函数即可.</p>\n<blockquote>\n<p>注意替换 ip 和 port 为自己代理工具设置的值</p>\n</blockquote>\n<p>编辑配置文件增加代理设置和取消的函数:</p>\n<pre><code class=\"hljs language-toml\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\"># 开启代理</span>\n<span class=\"lineNumber\">2</span>proxy () {\n<span class=\"lineNumber\">3</span>  export <span class=\"hljs-attr\">http_proxy</span>=<span class=\"hljs-string\">\"http://127.0.0.1:port\"</span>\n<span class=\"lineNumber\">4</span>  export <span class=\"hljs-attr\">https_proxy</span>=<span class=\"hljs-string\">\"http://127.0.0.1:port\"</span>\n<span class=\"lineNumber\">5</span>  echo \"Network Proxy on\"\n<span class=\"lineNumber\">6</span>}\n<span class=\"lineNumber\">7</span> \n<span class=\"lineNumber\">8</span><span class=\"hljs-comment\"># 关闭代理</span>\n<span class=\"lineNumber\">9</span>noproxy () {\n<span class=\"lineNumber\">10</span>  unset http_proxy\n<span class=\"lineNumber\">11</span>  unset https_proxy\n<span class=\"lineNumber\">12</span>  echo \"Network Proxy off\"\n<span class=\"lineNumber\">13</span>}</code></pre> \n\n<p>添加函数之后,可以<code>source ~/.zshrc or source ~/.bashrc</code>重置配置后进行调用.</p>\n<h2>2. Powershell</h2>\n<p><code>Powershell</code>无愧<code>Power</code>之名,强烈推荐<code>windows</code>环境开发者使用.其配置文件默认打开方式:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>notepad <span class=\"hljs-variable\">$profile</span></code></pre> \n\n<p>使用你喜欢的编辑器打开<code>$profile</code>环境变量保存的文件,如果不存在可以先创建.最后也是增加代理函数:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">proxy</span><span class=\"hljs-params\">()</span></span> {\n<span class=\"lineNumber\">2</span>\t<span class=\"hljs-variable\">$Env:https_proxy</span>=<span class=\"hljs-string\">\"http://localhost:port\"</span>\n<span class=\"lineNumber\">3</span>\t<span class=\"hljs-variable\">$Env:http_proxy</span>=<span class=\"hljs-string\">\"http://localhost:port\"</span>\n<span class=\"lineNumber\">4</span>}\n<span class=\"lineNumber\">5</span><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">noproxy</span><span class=\"hljs-params\">()</span></span> {\n<span class=\"lineNumber\">6</span>\t<span class=\"hljs-variable\">$Env:https_proxy</span>=<span class=\"hljs-string\">\"\"</span>\n<span class=\"lineNumber\">7</span>\t<span class=\"hljs-variable\">$Env:http_proxy</span>=<span class=\"hljs-string\">\"\"</span>\n<span class=\"lineNumber\">8</span>}</code></pre> \n\n<h2>3. CMD</h2>\n<p><code>CMD</code>依然在某些场合发挥着自己的作用,只是我并不喜欢<code>CMD</code>,你可以直接在命令行使用如下命令设置代理:</p>\n<pre><code class=\"hljs language-sh\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\"># set</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-built_in\">set</span> http_proxy=ip:port\n<span class=\"lineNumber\">3</span><span class=\"hljs-built_in\">set</span> https_proxy=ip:port\n<span class=\"lineNumber\">4</span><span class=\"hljs-comment\"># clear</span>\n<span class=\"lineNumber\">5</span><span class=\"hljs-built_in\">set</span> http_proxy=\n<span class=\"lineNumber\">6</span><span class=\"hljs-built_in\">set</span> https_proxy=</code></pre> \n\n<h2>4. Fish</h2>\n<p>当我发现<code>Fish shell</code>的时候, 我为<code>autojump</code>感到惊叹,fish shell 速度快,对于语法高亮的支持很好,虽然<code>zsh</code>也可以通过插件实现这些功能,一开始接触的时候虽然有一点不适,但我很快渐入佳境,现在我主要使用<code>fish</code>,但是在一些情况下依然会切换到<code>zsh</code>执行一些命令.</p>\n<p>话说回来,<code>Fish</code>的配置文件是<code>~/.config/fish/config.fish</code>:</p>\n<pre><code class=\"hljs language-shell\"><span class=\"lineNumber\">1</span>function proxy\n<span class=\"lineNumber\">2</span>  set -xg ALL_PROXY http://localhost:1087\n<span class=\"lineNumber\">3</span>end\n<span class=\"lineNumber\">4</span> \n<span class=\"lineNumber\">5</span>function noproxy\n<span class=\"lineNumber\">6</span>  set -e ALL_PROXY\n<span class=\"lineNumber\">7</span>end</code></pre> \n\n<p>但是也可以直接此插件来配置代理:</p>\n<p><a href=\"https://github.com/oh-my-fish/plugin-proxy\">oh-my-fish/plugin-proxy: Proxy settings plugin for Oh My Fish</a></p>\n<h2>5. 验证效果</h2>\n<pre><code class=\"hljs language-shell\"><span class=\"lineNumber\">1</span><span class=\"hljs-meta\">#</span><span class=\"bash\"> 开启</span>\n<span class=\"lineNumber\">2</span>proxy\n<span class=\"lineNumber\">3</span><span class=\"hljs-meta\">\n<span class=\"lineNumber\">4</span>#</span><span class=\"bash\"> 关闭</span>\n<span class=\"lineNumber\">5</span>noproxy\n<span class=\"lineNumber\">6</span><span class=\"hljs-meta\">\n<span class=\"lineNumber\">7</span>#</span><span class=\"bash\"> 使用某地址测试代理</span>\n<span class=\"lineNumber\">8</span>curl -v 某地址\n<span class=\"lineNumber\">9</span><span class=\"hljs-meta\">#</span><span class=\"bash\"> 未设置代理的结果:</span>\n<span class=\"lineNumber\">10</span>*   Trying 162.125.32.15...\n<span class=\"lineNumber\">11</span>...\n<span class=\"lineNumber\">12</span><span class=\"hljs-meta\">#</span><span class=\"bash\"> 设置代理:</span>\n<span class=\"lineNumber\">13</span>* Uses proxy env variable http_proxy == 'http://127.0.0.1:1087'\n<span class=\"lineNumber\">14</span>*   Trying 127.0.0.1...\n<span class=\"lineNumber\">15</span>...</code></pre> \n\n<h2>6. 其他</h2>\n<h3>6.1 Git</h3>\n<p>终端配置代理后使用<code>Git</code>,那么网络将走代理服务器,但是有些时候也可以不设置终端代理,直接为<code>Git</code>配置代理:</p>\n<pre><code class=\"hljs language-sh\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\"># 设置</span>\n<span class=\"lineNumber\">2</span>git config --global https.proxy http://127.0.0.1:1080\n<span class=\"lineNumber\">3</span>git config --global https.proxy https://127.0.0.1:1080\n<span class=\"lineNumber\">4</span> \n<span class=\"lineNumber\">5</span><span class=\"hljs-comment\"># 取消</span>\n<span class=\"lineNumber\">6</span>git config --global --<span class=\"hljs-built_in\">unset</span> http.proxy\n<span class=\"lineNumber\">7</span>git config --global --<span class=\"hljs-built_in\">unset</span> https.proxy</code></pre> \n\n<h3>6.2 NPM</h3>\n<p>无论是<code>npm</code>还是<code>pnpm</code>,都可以使用<code>yrm</code>直接选择源,可以直接通过<code>npm</code>安装<code>yrm</code>:</p>\n<pre><code class=\"hljs language-sh\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\"># install</span>\n<span class=\"lineNumber\">2</span>npm i -g yrm\n<span class=\"lineNumber\">3</span> \n<span class=\"lineNumber\">4</span><span class=\"hljs-comment\"># use </span>\n<span class=\"lineNumber\">5</span>yrm ls\n<span class=\"lineNumber\">6</span>yrm use taobao <span class=\"hljs-comment\"># 日常使用</span>\n<span class=\"lineNumber\">7</span>yrm use npm <span class=\"hljs-comment\"># 登录npm, 发布公共包</span></code></pre> \n\n<blockquote>\n<p>yrm 将直接重置 npm 的配置文件,如果你有独立的配置,建议不要使用 yrm,而是直接使用 npm cli 的配置功能.</p>\n</blockquote>\n","title":"多终端下的代理设置","date":"2021/3/19","tags":["proxy"],"mainImg":"https://images.unsplash.com/photo-1615760428224-3eacb2ece5ff?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2MTYxNjI2NDQ&ixlib=rb-1.2.1&q=80&w=1080","coverImg":"https://images.unsplash.com/photo-1615760428224-3eacb2ece5ff?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2MTYxNjI2NDQ&ixlib=rb-1.2.1&q=80&w=400","intro":"分享个人日常使用多种终端的代理配置经验.作为一个自诩眼界开阔的人,有一个稳定高效的梯子也是很合理的吧?"}},"__N_SSG":true}