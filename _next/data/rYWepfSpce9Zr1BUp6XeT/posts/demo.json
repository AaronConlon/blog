{"pageProps":{"post":{"slug":"demo","contentHtml":"<h1>Powershell Notebook</h1>\n<h2>chapter1：getting started with powershell</h2>\n<h3>1.1 允许在你的机器上运行脚本</h3>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\"># 以管理员身份运行,这条命令将修改注册表,注册表中保存了powershell很多默认配置项</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-built_in\">Set-ExecutionPolicy</span> RemoteSigned</code></pre> \n\n<p>将powershell的运行策略修改为运行未签名的脚本运行.或者通过管理员权限打开一个终端,执行脚本的时候指明使用<code>bypass</code>策略.</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>powershell.exe <span class=\"hljs-literal\">-ExecutionPolicy</span> Bypass <span class=\"hljs-operator\">-File</span> <span class=\"hljs-string\">\"c:\\MyScript.ps1\"</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-comment\"># 或者在此控制台先执行</span>\n<span class=\"lineNumber\">3</span><span class=\"hljs-built_in\">Set-ExecutionPolicy</span> Bypass <span class=\"hljs-keyword\">Process</span></code></pre> \n\n<h3>1.2 alias和简单函数</h3>\n<p>举个例子,<code>write-output</code>和<code>write-host</code>都能接受字符并且输出到屏幕,但是<code>write-output</code>还能返回输出的值作为结果,这在变量引用和管道传递方面很有用.简单函数不同但是结果相同,这在powershell中非常常见.</p>\n<p>同一个命令,可以有不同的别名,例如<code>write-output</code>的<code>alias</code>有<code>echo</code>和<code>write</code>.甚至,可以直接用单引号或者双引号括起来直接输出:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-string\">\"hello world\"</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-string\">'hello world'</span>\n<span class=\"lineNumber\">3</span> \n<span class=\"lineNumber\">4</span><span class=\"hljs-comment\"># alias即别名,一条命令可以有不同的别名,就像人可以有不同的外号,如下举例</span>\n<span class=\"lineNumber\">5</span><span class=\"hljs-built_in\">ls</span>\n<span class=\"lineNumber\">6</span><span class=\"hljs-built_in\">dir</span>\n<span class=\"lineNumber\">7</span><span class=\"hljs-comment\"># 都是get-childitem的alias</span></code></pre> \n\n<p>这些是系统自带的alias,我们可以自己增加,例如:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-built_in\">set-alias</span> <span class=\"hljs-literal\">-Name</span> ping <span class=\"hljs-literal\">-value</span> <span class=\"hljs-built_in\">test-netconnection</span>\n<span class=\"lineNumber\">2</span> \n<span class=\"lineNumber\">3</span><span class=\"hljs-comment\"># 如下所示</span>\n<span class=\"lineNumber\">4</span>➜  Markdown笔记 <span class=\"hljs-built_in\">Test-NetConnection</span> www.baidu.com\n<span class=\"lineNumber\">5</span>ComputerName           : www.baidu.com\n<span class=\"lineNumber\">6</span>RemoteAddress          : <span class=\"hljs-number\">14.215</span>.<span class=\"hljs-number\">177.39</span>\n<span class=\"lineNumber\">7</span>InterfaceAlias         : WLAN\n<span class=\"lineNumber\">8</span>SourceAddress          : <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">124.11</span>\n<span class=\"lineNumber\">9</span>PingSucceeded          : True\n<span class=\"lineNumber\">10</span>PingReplyDetails (RTT) : <span class=\"hljs-number\">8</span> ms\n<span class=\"lineNumber\">11</span> \n<span class=\"lineNumber\">12</span>➜  Markdown笔记 <span class=\"hljs-built_in\">Set-Alias</span> ping <span class=\"hljs-built_in\">Test-NetConnection</span>\n<span class=\"lineNumber\">13</span> \n<span class=\"lineNumber\">14</span>➜  Markdown笔记 ping www.baidu.com\n<span class=\"lineNumber\">15</span>ComputerName           : www.baidu.com\n<span class=\"lineNumber\">16</span>RemoteAddress          : <span class=\"hljs-number\">14.215</span>.<span class=\"hljs-number\">177.39</span>\n<span class=\"lineNumber\">17</span>InterfaceAlias         : WLAN\n<span class=\"lineNumber\">18</span>SourceAddress          : <span class=\"hljs-number\">192.168</span>.<span class=\"hljs-number\">124.11</span>\n<span class=\"lineNumber\">19</span>PingSucceeded          : True</code></pre> \n\n<p>但是,不同的终端属于不同的<code>session</code>,你可以在当前终端设置<code>alias</code>,此时其他终端并不会生效.并且,本终端设置的<code>alias</code>会重写默认存在的命令,如上所述,我重写了<code>ping</code>命令.本来<code>ping</code>命令是这样的:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>➜  ~ ping www.baidu.com\n<span class=\"lineNumber\">2</span> \n<span class=\"lineNumber\">3</span>正在 Ping www.a.shifen.com [<span class=\"hljs-number\">14.215</span><span class=\"hljs-type\">.177.39</span>] 具有 <span class=\"hljs-number\">32</span> 字节的数据:\n<span class=\"lineNumber\">4</span>来自 <span class=\"hljs-number\">14.215</span>.<span class=\"hljs-number\">177.39</span> 的回复: 字节=<span class=\"hljs-number\">32</span> 时间=<span class=\"hljs-number\">8</span>ms TTL=<span class=\"hljs-number\">55</span>\n<span class=\"lineNumber\">5</span>来自 <span class=\"hljs-number\">14.215</span>.<span class=\"hljs-number\">177.39</span> 的回复: 字节=<span class=\"hljs-number\">32</span> 时间=<span class=\"hljs-number\">8</span>ms TTL=<span class=\"hljs-number\">55</span>\n<span class=\"lineNumber\">6</span>来自 <span class=\"hljs-number\">14.215</span>.<span class=\"hljs-number\">177.39</span> 的回复: 字节=<span class=\"hljs-number\">32</span> 时间=<span class=\"hljs-number\">9</span>ms TTL=<span class=\"hljs-number\">55</span>\n<span class=\"lineNumber\">7</span>来自 <span class=\"hljs-number\">14.215</span>.<span class=\"hljs-number\">177.39</span> 的回复: 字节=<span class=\"hljs-number\">32</span> 时间=<span class=\"hljs-number\">8</span>ms TTL=<span class=\"hljs-number\">55</span>\n<span class=\"lineNumber\">8</span> \n<span class=\"lineNumber\">9</span><span class=\"hljs-number\">14.215</span>.<span class=\"hljs-number\">177.39</span> 的 Ping 统计信息:\n<span class=\"lineNumber\">10</span>    数据包: 已发送 = <span class=\"hljs-number\">4</span>，已接收 = <span class=\"hljs-number\">4</span>，丢失 = <span class=\"hljs-number\">0</span> (<span class=\"hljs-number\">0</span>% 丢失)，\n<span class=\"lineNumber\">11</span>往返行程的估计时间(以毫秒为单位):\n<span class=\"lineNumber\">12</span>    最短 = <span class=\"hljs-number\">8</span>ms，最长 = <span class=\"hljs-number\">9</span>ms，平均 = <span class=\"hljs-number\">8</span>ms</code></pre> \n\n<h3>1.3 管道</h3>\n<p>管道符<code>|</code>放在一条命令的末尾,可以将命令的返回值传递到下一个命令上去,并且作为下一条命令的<code>最后一个参数</code>使用.</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-built_in\">Get-ChildItem</span> | <span class=\"hljs-built_in\">Select-Object</span> Name\n<span class=\"lineNumber\">2</span><span class=\"hljs-comment\">#This may be shortened to:</span>\n<span class=\"lineNumber\">3</span><span class=\"hljs-built_in\">gci</span> | <span class=\"hljs-built_in\">Select</span> Name\n<span class=\"lineNumber\">4</span> \n<span class=\"lineNumber\">5</span><span class=\"hljs-comment\"># gci就是命令的alias</span>\n<span class=\"lineNumber\">6</span> \n<span class=\"lineNumber\">7</span><span class=\"hljs-built_in\">Get-ChildItem</span> | <span class=\"hljs-built_in\">ForEach-Object</span> {\n<span class=\"lineNumber\">8</span> <span class=\"hljs-built_in\">Copy-Item</span> <span class=\"hljs-literal\">-Path</span> <span class=\"hljs-variable\">$_</span>.FullName <span class=\"hljs-literal\">-destination</span> C:\\NewDirectory\\\n<span class=\"lineNumber\">9</span>}\n<span class=\"lineNumber\">10</span><span class=\"hljs-comment\">#This may be shortened to:</span>\n<span class=\"lineNumber\">11</span><span class=\"hljs-built_in\">gci</span> | % { <span class=\"hljs-built_in\">Copy</span> <span class=\"hljs-variable\">$_</span>.FullName C:\\NewDirectory\\ }</code></pre> \n\n<h3>1.4 使用<code>.net</code>库的方法</h3>\n<p>powershell天生支持<code>.net</code>的各种方法.毕竟是微软一家子的成员.例如:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\">#calling Path.GetFileName()</span>\n<span class=\"lineNumber\">2</span>C:\\> [<span class=\"hljs-type\">System.IO.Path</span>]::GetFileName(<span class=\"hljs-string\">'C:\\Windows\\explorer.exe'</span>)\n<span class=\"lineNumber\">3</span>explorer.exe</code></pre> \n\n<p>如果你熟悉<code>.net</code> 的话,使用它的库函数就能如虎添翼事半功倍.</p>\n<p>使用静态方法可以很直接,但是如果有些方法不是静态方法,则需要对<code>class</code>进行实例化.举例:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>➜  Markdown笔记 <span class=\"hljs-variable\">$object</span> = [<span class=\"hljs-type\">System.DateTime</span>]::now\n<span class=\"lineNumber\">2</span>➜  Markdown笔记 <span class=\"hljs-variable\">$object</span>.AddHours(<span class=\"hljs-number\">1</span>)\n<span class=\"lineNumber\">3</span><span class=\"hljs-number\">2020</span>年<span class=\"hljs-number\">8</span>月<span class=\"hljs-number\">3</span>日 <span class=\"hljs-number\">3</span>:<span class=\"hljs-number\">00</span>:<span class=\"hljs-number\">07</span></code></pre> \n\n<p>直接就输出一个修改过的时间结果.</p>\n<h3>1.5 安装或者设置</h3>\n<p>现在默认windows7以上自带<code>powershell</code>,但是在其他平台,则需要手动安装,例如支持在Ubuntu上安装<code>powershell v6</code>.</p>\n<p>powershell脚本的注释使用<code>#</code>.或者长注释使用<code>&#x3C;# comment #></code>内部添加注释,支持换行.</p>\n<h3>1.6 简述创建对象</h3>\n<p>powershell以管道传递对象,对象在powershell中具有独特的地位.举个例子.</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\"># 创建一个时间对象</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-variable\">$var</span> = <span class=\"hljs-built_in\">new-object</span> system<span class=\"hljs-literal\">-datetime</span>\n<span class=\"lineNumber\">3</span><span class=\"hljs-comment\"># 创建一个流对象</span>\n<span class=\"lineNumber\">4</span><span class=\"hljs-variable\">$sr</span> = <span class=\"hljs-built_in\">new-object</span> system.io.streamreader <span class=\"hljs-literal\">-argumentList</span> <span class=\"hljs-string\">\"file stream\"</span>\n<span class=\"lineNumber\">5</span> \n<span class=\"lineNumber\">6</span><span class=\"hljs-comment\"># 创建一个复杂对象</span>\n<span class=\"lineNumber\">7</span><span class=\"hljs-variable\">$newObj</span> = [<span class=\"hljs-type\">PScustomObject</span>]<span class=\"hljs-selector-tag\">@</span>{\n<span class=\"lineNumber\">8</span>\tComputerName = <span class=\"hljs-string\">'server1'</span>,\n<span class=\"lineNumber\">9</span>\tEnv = <span class=\"hljs-string\">'Production'</span>\n<span class=\"lineNumber\">10</span>}\n<span class=\"lineNumber\">11</span> \n<span class=\"lineNumber\">12</span><span class=\"hljs-comment\"># 创建一个ie浏览器对象</span>\n<span class=\"lineNumber\">13</span><span class=\"hljs-variable\">$IE1</span> = <span class=\"hljs-built_in\">New-Object</span> <span class=\"hljs-literal\">-COMObject</span> InternetExplorer.Application <span class=\"hljs-literal\">-Property</span> <span class=\"hljs-selector-tag\">@</span>{Navigate2=<span class=\"hljs-string\">\"www.microsoft.com\"</span>; Visible = <span class=\"hljs-variable\">$True</span>}\n<span class=\"lineNumber\">14</span> \n<span class=\"lineNumber\">15</span><span class=\"hljs-comment\"># The following command gets the same results as the example above.</span>\n<span class=\"lineNumber\">16</span><span class=\"hljs-variable\">$IE2</span> = <span class=\"hljs-built_in\">New-Object</span> <span class=\"hljs-literal\">-COMObject</span> InternetExplorer.Application`\n<span class=\"lineNumber\">17</span><span class=\"hljs-variable\">$IE2</span>.Navigate2(<span class=\"hljs-string\">\"www.microsoft.com\"</span>)`\n<span class=\"lineNumber\">18</span><span class=\"hljs-variable\">$IE2</span>.Visible = <span class=\"hljs-variable\">$True</span>`</code></pre> \n\n<p>上述可以看出创建对象的时候可以设置一些属性,或者创建基础实例之后再设置属性.所有的对象都可以通过管道进行传输.对象的集合在导入和导出特定的格式,例如csv或者xml的时候非常有效,例如命令<code>export-csv</code>的每一行都是一个对象.</p>\n<h2>chapter2: variable in powershell</h2>\n<blockquote>\n<p>变量用于保存数据,以便于后续使用.</p>\n</blockquote>\n<h3>2.1 简单变量和数组</h3>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-variable\">$name</span> = <span class=\"hljs-string\">\"root\"</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-variable\">$numArray</span> = <span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>\n<span class=\"lineNumber\">3</span><span class=\"hljs-variable\">$newArray</span> = <span class=\"hljs-number\">1</span>,<span class=\"hljs-string\">\"2\"</span> <span class=\"hljs-comment\"># 不限类型,比较灵活</span>\n<span class=\"lineNumber\">4</span><span class=\"hljs-variable\">$numArray</span> = <span class=\"hljs-variable\">$numArray</span> +<span class=\"hljs-number\">5</span>\n<span class=\"lineNumber\">5</span><span class=\"hljs-variable\">$newArray</span> = <span class=\"hljs-variable\">$newAarray</span> + <span class=\"hljs-variable\">$numArray</span></code></pre> \n\n<h3>2.2 拆分变量为数组</h3>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-variable\">$input</span>=<span class=\"hljs-string\">\"foo.bar.baz\"</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-variable\">$parts</span>=<span class=\"hljs-variable\">$input</span>.Split(<span class=\"hljs-string\">\".\"</span>)\n<span class=\"lineNumber\">3</span><span class=\"hljs-variable\">$foo</span>=<span class=\"hljs-variable\">$parts</span>[<span class=\"hljs-number\">0</span>]\n<span class=\"lineNumber\">4</span><span class=\"hljs-variable\">$bar</span>=<span class=\"hljs-variable\">$parts</span>[<span class=\"hljs-number\">1</span>]\n<span class=\"lineNumber\">5</span><span class=\"hljs-variable\">$baz</span>=<span class=\"hljs-variable\">$parts</span>[<span class=\"hljs-number\">2</span>]\n<span class=\"lineNumber\">6</span><span class=\"hljs-comment\">#You can simply do this:</span>\n<span class=\"lineNumber\">7</span><span class=\"hljs-variable\">$foo</span>,<span class=\"hljs-variable\">$bar</span>,<span class=\"hljs-variable\">$baz</span>=<span class=\"hljs-variable\">$input</span>.Split(<span class=\"hljs-string\">\".\"</span>)</code></pre> \n\n<p>灵活处理字符串和数组.类似<code>js</code>,也可以根据变量的数量去分配.</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-variable\">$foo</span>, <span class=\"hljs-variable\">$_</span> = <span class=\"hljs-variable\">$input</span>.Split(<span class=\"hljs-string\">\".\"</span>)\n<span class=\"lineNumber\">2</span><span class=\"hljs-comment\"># foo则保存首个拆分的值,_保存剩下的数组.</span></code></pre> \n\n<h3>2.3 Scope</h3>\n<p>作用域范围跟分为局部和全局,函数内部只在内部有效,支持闭包.如果你想要指定外部的变量,以便于和函数内部同名变量区分.则可以使用如下方式:</p>\n<p><code>$local:foo</code> 和 <code>$global:foo</code>,如果存在多层嵌套,则<code>global</code>为最外层.</p>\n<h3>2.4 移除变量</h3>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\"># 需要指定类型为 Variable,再指定变量名</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-built_in\">Remove-Item</span> Variable:\\foo</code></pre> \n\n<p>变量支持像处理文件系统项目的大多数的<code>*-item</code>命令进行处理.</p>\n<p>更显式的删除变量,可以使用<code>remove-variable</code>命令.其简写是<code>rv</code>.命令如<code>rv foo</code></p>\n<h2>chapter 3: Operators</h2>\n<h3>3.1 比较运算符</h3>\n<p>类似<code>bash</code>,使用如下方式进行比较,返回<code>true</code>或者<code>false</code>的<code>boolean</code>值.</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">-eq</span> <span class=\"hljs-number\">2</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">-ne</span> <span class=\"hljs-number\">2</span>\n<span class=\"lineNumber\">3</span><span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">-lt</span> <span class=\"hljs-number\">2</span>\n<span class=\"lineNumber\">4</span><span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">-gt</span> <span class=\"hljs-number\">2</span>\n<span class=\"lineNumber\">5</span><span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">-ge</span> <span class=\"hljs-number\">2</span>\n<span class=\"lineNumber\">6</span><span class=\"hljs-number\">2</span> <span class=\"hljs-operator\">-le</span> <span class=\"hljs-number\">2</span>\n<span class=\"lineNumber\">7</span><span class=\"hljs-comment\"># 针对大小写是否敏感</span>\n<span class=\"lineNumber\">8</span>a <span class=\"hljs-literal\">-eqi</span> A <span class=\"hljs-comment\"># true,字符串不敏感,eqc则敏感</span>\n<span class=\"lineNumber\">9</span> \n<span class=\"lineNumber\">10</span><span class=\"hljs-comment\"># 字符串比较</span>\n<span class=\"lineNumber\">11</span><span class=\"hljs-comment\"># root at LAPTOP-G92L1V81 in D:\\pw7 workstation\\git-repos\\nextjs_blog\\posts on git:master ≣ +0 ~1 -0 ! [1:39:32]</span>\n<span class=\"lineNumber\">12</span>➜ <span class=\"hljs-string\">\"string\"</span> <span class=\"hljs-operator\">-like</span> <span class=\"hljs-string\">\"*ing\"</span>\n<span class=\"lineNumber\">13</span>True\n<span class=\"lineNumber\">14</span><span class=\"hljs-comment\"># root at LAPTOP-G92L1V81 in D:\\pw7 workstation\\git-repos\\nextjs_blog\\posts on git:master ≣ +0 ~1 -0 ! [1:40:00]</span>\n<span class=\"lineNumber\">15</span>➜ <span class=\"hljs-string\">\"string\"</span> <span class=\"hljs-operator\">-like</span> <span class=\"hljs-string\">\"ing\"</span>\n<span class=\"lineNumber\">16</span>False\n<span class=\"lineNumber\">17</span> \n<span class=\"lineNumber\">18</span><span class=\"hljs-comment\"># 加not取反</span>\n<span class=\"lineNumber\">19</span>➜ <span class=\"hljs-string\">\"string\"</span> <span class=\"hljs-operator\">-notlike</span> <span class=\"hljs-string\">\"ing\"</span>\n<span class=\"lineNumber\">20</span>True\n<span class=\"lineNumber\">21</span> \n<span class=\"lineNumber\">22</span><span class=\"hljs-comment\"># 支持正则表达式</span>\n<span class=\"lineNumber\">23</span>➜ <span class=\"hljs-string\">\"string\"</span> <span class=\"hljs-operator\">-match</span> <span class=\"hljs-string\">\"ing\"</span>\n<span class=\"lineNumber\">24</span>True\n<span class=\"lineNumber\">25</span><span class=\"hljs-comment\"># root at LAPTOP-G92L1V81 in D:\\pw7 workstation\\git-repos\\nextjs_blog\\posts on git:master ≣ +0 ~1 -0 ! [1:41:15]</span>\n<span class=\"lineNumber\">26</span>➜ <span class=\"hljs-string\">\"string\"</span> <span class=\"hljs-operator\">-match</span> <span class=\"hljs-string\">\"inge\"</span>\n<span class=\"lineNumber\">27</span>False\n<span class=\"lineNumber\">28</span><span class=\"hljs-comment\"># root at LAPTOP-G92L1V81 in D:\\pw7 workstation\\git-repos\\nextjs_blog\\posts on git:master ≣ +0 ~1 -0 ! [1:41:22]</span>\n<span class=\"lineNumber\">29</span>➜ <span class=\"hljs-string\">\"string\"</span> <span class=\"hljs-operator\">-match</span> <span class=\"hljs-string\">\"ing&#x26;\"</span>\n<span class=\"lineNumber\">30</span>False\n<span class=\"lineNumber\">31</span><span class=\"hljs-comment\"># root at LAPTOP-G92L1V81 in D:\\pw7 workstation\\git-repos\\nextjs_blog\\posts on git:master ≣ +0 ~1 -0 ! [1:41:33]</span>\n<span class=\"lineNumber\">32</span>➜ <span class=\"hljs-string\">\"string\"</span> <span class=\"hljs-operator\">-match</span> <span class=\"hljs-string\">\"ing<span class=\"hljs-variable\">$</span>\"</span>\n<span class=\"lineNumber\">33</span>True\n<span class=\"lineNumber\">34</span> \n<span class=\"lineNumber\">35</span><span class=\"hljs-comment\"># 集合数据比较</span>\n<span class=\"lineNumber\">36</span> \n<span class=\"lineNumber\">37</span><span class=\"hljs-comment\"># root at LAPTOP-G92L1V81 in D:\\pw7 workstation\\git-repos\\nextjs_blog\\posts on git:master ≣ +0 ~1 -0 ! [1:41:37]</span>\n<span class=\"lineNumber\">38</span>➜ <span class=\"hljs-string\">\"12\"</span>,<span class=\"hljs-string\">\"abc\"</span> <span class=\"hljs-operator\">-contains</span> <span class=\"hljs-string\">\"1\"</span>\n<span class=\"lineNumber\">39</span>False\n<span class=\"lineNumber\">40</span><span class=\"hljs-comment\"># root at LAPTOP-G92L1V81 in D:\\pw7 workstation\\git-repos\\nextjs_blog\\posts on git:master ≣ +0 ~1 -0 ! [1:44:14]</span>\n<span class=\"lineNumber\">41</span>➜ <span class=\"hljs-string\">\"12\"</span>,<span class=\"hljs-string\">\"abc\"</span> <span class=\"hljs-operator\">-contains</span> <span class=\"hljs-string\">\"12\"</span>\n<span class=\"lineNumber\">42</span>True\n<span class=\"lineNumber\">43</span> \n<span class=\"lineNumber\">44</span>➜ <span class=\"hljs-string\">\"12\"</span> <span class=\"hljs-operator\">-in</span> <span class=\"hljs-string\">\"aaa\"</span>,<span class=\"hljs-string\">\"12\"</span>\n<span class=\"lineNumber\">45</span>True</code></pre> \n\n<h3>3.2 算数运算</h3>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-number\">1</span>+<span class=\"hljs-number\">2</span>\t<span class=\"hljs-comment\"># Addition</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-number\">1</span><span class=\"hljs-literal\">-2</span>\t<span class=\"hljs-comment\"># Subtraction</span>\n<span class=\"lineNumber\">3</span><span class=\"hljs-literal\">-1</span>\t<span class=\"hljs-comment\"># Set negative value</span>\n<span class=\"lineNumber\">4</span><span class=\"hljs-number\">1</span>*<span class=\"hljs-number\">2</span>\t<span class=\"hljs-comment\"># Multiplication</span>\n<span class=\"lineNumber\">5</span><span class=\"hljs-number\">1</span>/<span class=\"hljs-number\">2</span>\t<span class=\"hljs-comment\"># Division</span>\n<span class=\"lineNumber\">6</span><span class=\"hljs-number\">1</span>%<span class=\"hljs-number\">2</span>\t<span class=\"hljs-comment\"># Modulus</span>\n<span class=\"lineNumber\">7</span><span class=\"hljs-number\">100</span> <span class=\"hljs-operator\">-shl</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-comment\"># 按位左移</span>\n<span class=\"lineNumber\">8</span><span class=\"hljs-number\">100</span> <span class=\"hljs-operator\">-shr</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-comment\"># 按位右移</span>\n<span class=\"lineNumber\">9</span> \n<span class=\"lineNumber\">10</span><span class=\"hljs-comment\"># 变量计算</span>\n<span class=\"lineNumber\">11</span><span class=\"hljs-variable\">$var</span> = <span class=\"hljs-number\">1</span>\n<span class=\"lineNumber\">12</span><span class=\"hljs-variable\">$var</span> += <span class=\"hljs-number\">2</span>\n<span class=\"lineNumber\">13</span><span class=\"hljs-variable\">$var</span>++\n<span class=\"lineNumber\">14</span><span class=\"hljs-variable\">$var</span> += <span class=\"hljs-string\">\"2\"</span> <span class=\"hljs-comment\"># 也支持,自动类型转换</span></code></pre> \n\n<h3>3.3 输出重定向操作</h3>\n<blockquote>\n<p>大神详解:<a href=\"https://devblogs.microsoft.com/scripting/understanding-streams-redirection-and-write-host-in-powershell/\">Understanding Streams, Redirection, and Write-Host in PowerShell | Scripting Blog</a></p>\n</blockquote>\n<p>执行命令或者程序,将产生不同类型的输出信息流.</p>\n<p><img src=\"https://devblogs.microsoft.com/wp-content/uploads/sites/29/2019/02/2570.1.png\" alt=\"\"></p>\n<p>顺利执行将产生success的输出流,举个例子:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>cmdlet > file <span class=\"hljs-comment\"># 发送success输出流重写file的内容</span>\n<span class=\"lineNumber\">2</span>cmdlet >> file <span class=\"hljs-comment\"># 追加success输出流到file的文件末尾</span>\n<span class=\"lineNumber\">3</span>cmdlet <span class=\"hljs-number\">1</span>>&#x26;<span class=\"hljs-number\">2</span> <span class=\"hljs-comment\"># 1代表success状态的输出流,此时指的是将success(1)和error(2)的输出重定向到error流中去</span>\n<span class=\"lineNumber\">4</span> \n<span class=\"lineNumber\">5</span>cmdlet <span class=\"hljs-number\">2</span>> file <span class=\"hljs-comment\"># error(2) 输出流</span>\n<span class=\"lineNumber\">6</span>cmdlet <span class=\"hljs-number\">3</span>> file <span class=\"hljs-comment\"># powershell v3+支持的warning数据流</span>\n<span class=\"lineNumber\">7</span>cmdlet <span class=\"hljs-number\">4</span>> file <span class=\"hljs-comment\"># powershell v3+支持的verbose输出流,详细消息流通常用于提供命令处理的相关信息,便于调试</span>\n<span class=\"lineNumber\">8</span>cmdlet <span class=\"hljs-number\">5</span>> file <span class=\"hljs-comment\"># Debug</span>\n<span class=\"lineNumber\">9</span>cmdlet <span class=\"hljs-number\">6</span>> file <span class=\"hljs-comment\"># information level</span></code></pre> \n\n<p>不同的流是平行的,在管道之间传递对象,我们并不希望接受cmdlet各种类型的流式数据.且管道符默认接收了<code>success</code>级别的信息.其他的流的数据发往了其他的接收处.</p>\n<blockquote>\n<p>Windows PowerShell inventor, Jeffrey Snover, says that <a href=\"http://www.jsnover.com/blog/2013/12/07/write-host-considered-harmful/\">Write-Host is harmful</a></p>\n</blockquote>\n<p><strong>Write-Host is not written to any stream</strong>.<code>write-host</code>不会污染输出流,且<code>不向任何流进行输入</code>.单纯向屏幕输出.</p>\n<p>也就是说你无法将<code>write-host</code>的message定向到其他流,也没法分配给变量.</p>\n<p>还可以看看这里:<a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_redirection?view=powershell-7\">about_Redirection - PowerShell | Microsoft Docs</a></p>\n<p>另外举个例子:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\"># 同时ls查看两个目录,如下命令可以将错误信息重定向转移走,输入到z文件,而不会只是将success的ls d:结果输出z</span>\n<span class=\"lineNumber\">2</span>▶ <span class=\"hljs-built_in\">ls</span> D:,fake *> z\n<span class=\"lineNumber\">3</span> \n<span class=\"lineNumber\">4</span><span class=\"hljs-comment\"># 如果不重定向</span>\n<span class=\"lineNumber\">5</span>▶ <span class=\"hljs-built_in\">ls</span> D:,fake > z\n<span class=\"lineNumber\">6</span><span class=\"hljs-built_in\">Get-ChildItem</span>: Cannot find path <span class=\"hljs-string\">'C:\\Users\\root\\fake'</span> because it does not exist.\n<span class=\"lineNumber\">7</span>~ ⨯\n<span class=\"lineNumber\">8</span>▶ <span class=\"hljs-built_in\">cat</span> z\n<span class=\"lineNumber\">9</span> \n<span class=\"lineNumber\">10</span>\n<span class=\"lineNumber\">11</span>    Directory: D:\\pw7 workstation\\git<span class=\"hljs-literal\">-repos</span>\\nextjs_blog\\posts\n<span class=\"lineNumber\">12</span><span class=\"hljs-comment\"># 则z保存了success的信息</span></code></pre> \n\n<p>至于,将<code>success</code>消息重定向到<code>error流</code>的操作,终端提示错误,跟书本不符.不过不会真有人想要做这种事吧.</p>\n<p>另外,我用过几次将没必要的错误信息流重定向到<code>$null</code>中去.或者将没必要的所有流都扔掉:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>cmdlet *><span class=\"hljs-variable\">$null</span></code></pre> \n\n<h3>3.4 混合操作类型</h3>\n<p>举例如下:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>▶ <span class=\"hljs-string\">\"2\"</span>+<span class=\"hljs-number\">2</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-number\">22</span>\n<span class=\"lineNumber\">3</span>~\n<span class=\"lineNumber\">4</span>▶ <span class=\"hljs-number\">2</span>+<span class=\"hljs-string\">\"22\"</span>\n<span class=\"lineNumber\">5</span><span class=\"hljs-number\">24</span>\n<span class=\"lineNumber\">6</span>~\n<span class=\"lineNumber\">7</span>➜ <span class=\"hljs-string\">\"2\"</span> * <span class=\"hljs-number\">2</span>\n<span class=\"lineNumber\">8</span><span class=\"hljs-number\">22</span>\n<span class=\"lineNumber\">9</span>➜ <span class=\"hljs-number\">2</span> * <span class=\"hljs-string\">\"2\"</span>\n<span class=\"lineNumber\">10</span><span class=\"hljs-number\">4</span>\n<span class=\"lineNumber\">11</span>➜ <span class=\"hljs-variable\">$a</span> = <span class=\"hljs-built_in\">Read-Host</span>\n<span class=\"lineNumber\">12</span><span class=\"hljs-number\">33</span>\n<span class=\"lineNumber\">13</span>➜ <span class=\"hljs-variable\">$a</span> <span class=\"hljs-operator\">-gt</span> <span class=\"hljs-number\">5</span>\n<span class=\"lineNumber\">14</span>False\n<span class=\"lineNumber\">15</span>➜ <span class=\"hljs-number\">5</span> <span class=\"hljs-operator\">-gt</span> <span class=\"hljs-variable\">$a</span>\n<span class=\"lineNumber\">16</span>False</code></pre> \n\n<p>左边的数据类型决定了整体的计算和数据转换方式.</p>\n<h3>3.5 逻辑操作和字符串变换操作</h3>\n<p>举例:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-operator\">-and</span> <span class=\"hljs-comment\"># 与</span>\n<span class=\"lineNumber\">2</span><span class=\"hljs-operator\">-or</span> <span class=\"hljs-comment\"># 或</span>\n<span class=\"lineNumber\">3</span><span class=\"hljs-operator\">-xor</span> <span class=\"hljs-comment\"># 异或</span>\n<span class=\"lineNumber\">4</span><span class=\"hljs-operator\">-not</span> <span class=\"hljs-comment\"># not</span>\n<span class=\"lineNumber\">5</span>! <span class=\"hljs-comment\"># not</span>\n<span class=\"lineNumber\">6</span> \n<span class=\"lineNumber\">7</span><span class=\"hljs-comment\"># 常见替换</span>\n<span class=\"lineNumber\">8</span>➜ <span class=\"hljs-string\">\"just a demo\"</span> <span class=\"hljs-operator\">-replace</span> <span class=\"hljs-string\">\"demo\"</span>,<span class=\"hljs-string\">\"test\"</span>\n<span class=\"lineNumber\">9</span>just a test\n<span class=\"lineNumber\">10</span> \n<span class=\"lineNumber\">11</span><span class=\"hljs-comment\"># 正则表达式单引号替换</span>\n<span class=\"lineNumber\">12</span>➜ <span class=\"hljs-string\">\"root@gmail.com\"</span> <span class=\"hljs-operator\">-replace</span> <span class=\"hljs-string\">'^[\\w]+@(.+)'</span>,<span class=\"hljs-string\">'$1'</span>\n<span class=\"lineNumber\">13</span>gmail.com\n<span class=\"lineNumber\">14</span> \n<span class=\"lineNumber\">15</span><span class=\"hljs-comment\"># 拆分数组</span>\n<span class=\"lineNumber\">16</span>➜ <span class=\"hljs-string\">\"root@gmail.com\"</span> <span class=\"hljs-operator\">-split</span> <span class=\"hljs-string\">\"@\"</span>\n<span class=\"lineNumber\">17</span>root\n<span class=\"lineNumber\">18</span>gmail.com\n<span class=\"lineNumber\">19</span> \n<span class=\"lineNumber\">20</span><span class=\"hljs-comment\"># join数组</span>\n<span class=\"lineNumber\">21</span>➜ <span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-operator\">-join</span> <span class=\"hljs-string\">\":\"</span>\n<span class=\"lineNumber\">22</span><span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">1</span>:<span class=\"hljs-number\">0</span></code></pre> \n\n<h2>Chapter 4: Special Operators</h2>\n<h3>4.1 数组表达运算符</h3>\n<p>通过一个表达式返回一个数组:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>➜  posts git:(master) <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-built_in\">Get-ChildItem</span> C:\\Windows\\System32\\ntdll.dll)\n<span class=\"lineNumber\">2</span> \n<span class=\"lineNumber\">3</span>\n<span class=\"lineNumber\">4</span>    Directory: C:\\Windows\\System32\n<span class=\"lineNumber\">5</span> \n<span class=\"lineNumber\">6</span>Mode                 LastWriteTime         Length Name\n<span class=\"lineNumber\">7</span>----                 -------------         ------ ----\n<span class=\"lineNumber\">8</span><span class=\"hljs-literal\">-a</span>---           <span class=\"hljs-number\">2020</span>/<span class=\"hljs-number\">7</span>/<span class=\"hljs-number\">17</span>    <span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">10</span>        <span class=\"hljs-number\">1999968</span> ntdll.dll\n<span class=\"lineNumber\">9</span> \n<span class=\"lineNumber\">10</span>➜  posts git:(master) <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-built_in\">Get-ChildItem</span> C:\\Windows\\System32\\ntdll.dll)[<span class=\"hljs-number\">0</span>]\n<span class=\"lineNumber\">11</span> \n<span class=\"lineNumber\">12</span>\n<span class=\"lineNumber\">13</span>    Directory: C:\\Windows\\System32\n<span class=\"lineNumber\">14</span> \n<span class=\"lineNumber\">15</span>Mode                 LastWriteTime         Length Name\n<span class=\"lineNumber\">16</span>----                 -------------         ------ ----\n<span class=\"lineNumber\">17</span><span class=\"hljs-literal\">-a</span>---           <span class=\"hljs-number\">2020</span>/<span class=\"hljs-number\">7</span>/<span class=\"hljs-number\">17</span>    <span class=\"hljs-number\">20</span>:<span class=\"hljs-number\">10</span>        <span class=\"hljs-number\">1999968</span> ntdll.dll\n<span class=\"lineNumber\">18</span> \n<span class=\"lineNumber\">19</span>➜  posts git:(master) <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-built_in\">Get-ChildItem</span> C:\\Windows\\System32\\ntdll.dll)[<span class=\"hljs-number\">1</span>]\n<span class=\"lineNumber\">20</span>➜  posts git:(master)</code></pre> \n\n<p>如上所述,<code>@()</code>内部的表达式处理返回值将得到一个数组.</p>\n<h3>4.2 调用运算符</h3>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span><span class=\"hljs-variable\">$command</span> = <span class=\"hljs-string\">'ls'</span>\n<span class=\"lineNumber\">2</span>&#x26;<span class=\"hljs-variable\">$command</span> <span class=\"hljs-comment\"># 等于直接调用字符串的内容,视为命令并执行</span></code></pre> \n\n<h3>4.3 点源操作(dot sourcing operator)</h3>\n<p><code>. $profile</code>是我很常用的一个命令,因为我经常修改预加载的配置文件<code>$profile</code>.这个变量指向一个<code>.ps1</code>文件,每个console打开的时候都会<code>run</code>这个文件.因此,可以在这里面设置一下alias或者function.</p>\n<p>当我们在当前terminal下使用<code>. xxx.ps1</code>命令执行此脚本的时候,即将此脚本的执行环境范围设置为当前<code>terminal session</code>.</p>\n<p>回到<code>$profile</code>的例子,我修改了这个脚本,并且在当前<code>terminal</code>执行了<code>. $profile</code>,则此脚本内的函数即加载到我的<code>terminal session</code>内了.我可以轻松调用此脚本内的函数处理我的事务.</p>\n<h2>Chapter 5: Basic set Operations</h2>\n<h3>5.1 对象选择</h3>\n<p>使用条件表达式<code>where-object</code> 过滤枚举对象,其常用alias是<code>where</code>和<code>?</code>.</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>➜  ~ <span class=\"hljs-variable\">$names</span>= <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">\"Aaron\"</span>,<span class=\"hljs-string\">\"Albert\"</span>,<span class=\"hljs-string\">\"Alphonse\"</span>,<span class=\"hljs-string\">\"Bernie\"</span>,<span class=\"hljs-string\">\"Charlie\"</span>,<span class=\"hljs-string\">\"Danny\"</span>,<span class=\"hljs-string\">\"Ernie\"</span>,<span class=\"hljs-string\">\"Frank\"</span>)\n<span class=\"lineNumber\">2</span>➜  ~ <span class=\"hljs-variable\">$name</span> | <span class=\"hljs-built_in\">Where-Object</span> {<span class=\"hljs-variable\">$_</span> <span class=\"hljs-operator\">-like</span> <span class=\"hljs-string\">\"*yi\"</span>}\n<span class=\"lineNumber\">3</span>youyi\n<span class=\"lineNumber\">4</span>➜  ~ <span class=\"hljs-variable\">$name</span> | <span class=\"hljs-built_in\">Where</span> {<span class=\"hljs-variable\">$_</span> <span class=\"hljs-operator\">-like</span> <span class=\"hljs-string\">\"*yi\"</span>}\n<span class=\"lineNumber\">5</span>youyi\n<span class=\"lineNumber\">6</span>➜  ~ <span class=\"hljs-variable\">$name</span> | ? {<span class=\"hljs-variable\">$_</span> <span class=\"hljs-operator\">-like</span> <span class=\"hljs-string\">\"*yi\"</span>}\n<span class=\"lineNumber\">7</span>youyi</code></pre> \n\n<h3>5.2 对象排序</h3>\n<p>对可迭代对象进行升序和降序排序:</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>➜  ~ <span class=\"hljs-variable\">$names</span>= <span class=\"hljs-selector-tag\">@</span>(<span class=\"hljs-string\">\"Aaron\"</span>,<span class=\"hljs-string\">\"Albert\"</span>,<span class=\"hljs-string\">\"Alphonse\"</span>,<span class=\"hljs-string\">\"Bernie\"</span>,<span class=\"hljs-string\">\"Charlie\"</span>,<span class=\"hljs-string\">\"Danny\"</span>,<span class=\"hljs-string\">\"Ernie\"</span>,<span class=\"hljs-string\">\"Frank\"</span>)\n<span class=\"lineNumber\">2</span>➜  ~ <span class=\"hljs-variable\">$names</span> | <span class=\"hljs-built_in\">sort</span>\n<span class=\"lineNumber\">3</span>Aaron\n<span class=\"lineNumber\">4</span>Albert\n<span class=\"lineNumber\">5</span>Alphonse\n<span class=\"lineNumber\">6</span>Bernie\n<span class=\"lineNumber\">7</span>Charlie\n<span class=\"lineNumber\">8</span>Danny\n<span class=\"lineNumber\">9</span>Ernie\n<span class=\"lineNumber\">10</span>Frank\n<span class=\"lineNumber\">11</span>➜  ~ <span class=\"hljs-variable\">$names</span> | <span class=\"hljs-built_in\">Sort-Object</span> <span class=\"hljs-literal\">-Descending</span>\n<span class=\"lineNumber\">12</span>Frank\n<span class=\"lineNumber\">13</span>Ernie\n<span class=\"lineNumber\">14</span>Danny\n<span class=\"lineNumber\">15</span>Charlie\n<span class=\"lineNumber\">16</span>Bernie\n<span class=\"lineNumber\">17</span>Alphonse\n<span class=\"lineNumber\">18</span>Albert\n<span class=\"lineNumber\">19</span>Aaron\n<span class=\"lineNumber\">20</span> \n<span class=\"lineNumber\">21</span><span class=\"hljs-comment\"># 指定属性</span>\n<span class=\"lineNumber\">22</span>➜  ~ <span class=\"hljs-variable\">$names</span> | <span class=\"hljs-built_in\">Sort-Object</span> <span class=\"hljs-literal\">-Top</span> <span class=\"hljs-number\">3</span> <span class=\"hljs-literal\">-Property</span> Length\n<span class=\"lineNumber\">23</span>Aaron\n<span class=\"lineNumber\">24</span>Danny\n<span class=\"lineNumber\">25</span>Ernie\n<span class=\"lineNumber\">26</span>➜  ~ <span class=\"hljs-variable\">$names</span> | <span class=\"hljs-built_in\">Sort-Object</span> {<span class=\"hljs-variable\">$_</span>.length} <span class=\"hljs-literal\">-Top</span> <span class=\"hljs-number\">3</span>\n<span class=\"lineNumber\">27</span>Aaron\n<span class=\"lineNumber\">28</span>Danny\n<span class=\"lineNumber\">29</span>Ernie</code></pre> \n\n<h3>5.3 分组排序</h3>\n<p>可以通过设置表达式,实现分组的排序.</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>➜  ~ <span class=\"hljs-variable\">$names</span> | <span class=\"hljs-built_in\">Group-Object</span> <span class=\"hljs-literal\">-Property</span> length <span class=\"hljs-comment\"># group-object alias is group</span>\n<span class=\"lineNumber\">2</span> \n<span class=\"lineNumber\">3</span>Count Name                      <span class=\"hljs-built_in\">Group</span>\n<span class=\"lineNumber\">4</span>----- ----                      -----\n<span class=\"lineNumber\">5</span>    <span class=\"hljs-number\">4</span> <span class=\"hljs-number\">5</span>                         {Aaron, Danny, Ernie, Frank}\n<span class=\"lineNumber\">6</span>    <span class=\"hljs-number\">2</span> <span class=\"hljs-number\">6</span>                         {Albert, Bernie}\n<span class=\"lineNumber\">7</span>    <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">7</span>                         {Charlie}\n<span class=\"lineNumber\">8</span>    <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">8</span>                         {Alphonse}</code></pre> \n\n<h3>5.4 对象投影</h3>\n<p>这个小节标题让我想起当初上SQL的课的时候了.投影一个可迭代对象的部分item,可以对单独的对象进行展开操作.获取自己想要的部分数据.</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"lineNumber\">1</span>➜  ~ <span class=\"hljs-variable\">$dir</span> = <span class=\"hljs-built_in\">ls</span>\n<span class=\"lineNumber\">2</span>➜  ~ <span class=\"hljs-variable\">$dir</span> | <span class=\"hljs-built_in\">select</span> name, FullName, LastAccessTime\n<span class=\"lineNumber\">3</span> \n<span class=\"lineNumber\">4</span>Name                     FullName                               Last\n<span class=\"lineNumber\">5</span>                                                                Acce\n<span class=\"lineNumber\">6</span>                                                                ssTi\n<span class=\"lineNumber\">7</span>                                                                me\n<span class=\"lineNumber\">8</span>----                     --------                               ----\n<span class=\"lineNumber\">9</span>.atom                    C:\\Users\\root\\.atom                    <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">10</span>.config                  C:\\Users\\root\\.config                  <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">11</span>.ssh                     C:\\Users\\root\\.ssh                     <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">12</span>.vscode                  C:\\Users\\root\\.vscode                  <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">13</span><span class=\"hljs-number\">3</span>D Objects               C:\\Users\\root\\<span class=\"hljs-number\">3</span>D Objects               <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">14</span>Contacts                 C:\\Users\\root\\Contacts                 <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">15</span>Documents                C:\\Users\\root\\Documents                <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">16</span>Downloads                C:\\Users\\root\\Downloads                <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">17</span>Favorites                C:\\Users\\root\\Favorites                <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">18</span>Links                    C:\\Users\\root\\Links                    <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">19</span>Music                    C:\\Users\\root\\Music                    <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">20</span>OneDrive                 C:\\Users\\root\\OneDrive                 <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">21</span>Pictures                 C:\\Users\\root\\Pictures                 <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">22</span>Saved Games              C:\\Users\\root\\Saved Games              <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">23</span>scoop                    C:\\Users\\root\\scoop                    <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">24</span>Searches                 C:\\Users\\root\\Searches                 <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">25</span>Videos                   C:\\Users\\root\\Videos                   <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">26</span>.bash_history            C:\\Users\\root\\.bash_history            <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">27</span>.bash_profile            C:\\Users\\root\\.bash_profile            <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">28</span>.bashrc                  C:\\Users\\root\\.bashrc                  <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">29</span>.bashrc.swp              C:\\Users\\root\\.bashrc.swp              <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">30</span>.gitconfig               C:\\Users\\root\\.gitconfig               <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">31</span>.git<span class=\"hljs-literal\">-for</span><span class=\"hljs-literal\">-windows</span><span class=\"hljs-literal\">-updater</span> C:\\Users\\root\\.git<span class=\"hljs-literal\">-for</span><span class=\"hljs-literal\">-windows</span><span class=\"hljs-literal\">-updater</span> <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">32</span>.node_repl_history       C:\\Users\\root\\.node_repl_history       <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">33</span>.viminfo                 C:\\Users\\root\\.viminfo                 <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">34</span>.vuerc                   C:\\Users\\root\\.vuerc                   <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">35</span>.yarnrc                  C:\\Users\\root\\.yarnrc                  <span class=\"hljs-number\">202</span>…\n<span class=\"lineNumber\">36</span> \n<span class=\"lineNumber\">37</span>➜  ~</code></pre> \n\n","title":"Podemo","date":"2020-08-03","tags":["powershell","读书"],"mainImg":"https://images.unsplash.com/photo-1545875615-86f54b81a82d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1920","coverImg":"https://images.unsplash.com/photo-1499257398700-43669759a540?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=440","intro":"dsadada举个例子,`write-output`和`write-host`都能接受字符并且输出到屏幕,但是`write-output`还能返回输出的值作为结果,这在变量引用和管道传递方面很有用.简单函数不同但是结果相同,这在powershell中非常常见."}},"__N_SSG":true}