{"pageProps":{"post":{"slug":"Swift初体验","content":"\n用最快的速度，了解、学习、上手`Swift`！\n\n### 基础\n\n#### 简单值\n\n```swift\n// 变量\nvar count = 2\ncount = 3\n// 常量\nlet count = 999\n// 空值\nnil\n// 数据类型\nlet explicitDouble: Double = 70\n// 可选值\nlet name: String? = 'Aaron' \nlet sex: String? = nil\n```\n\n> 值不会隐式转换！\n\n#### 显式转换值\n\n```swift\nlet label = \"The width is \"\nlet width = 94\nlet widthLabel = label + String(width)\n```\n\n#### 插值转换\n\n```swift\nlet apples = 3\nlet oranges = 5\nlet appleSummary = \"I have \\(apples) apples.\"\nlet fruitSummary = \"I have \\(apples + oranges) pieces of fruit.\"\n```\n\n#### 多行字符串\n\n```swift\nlet quotation = \"\"\"\nI said \"I have \\(apples) apples.\"\nAnd then I said \"I have \\(apples + oranges) pieces of fruit.\"\n\"\"\"\n```\n\n#### 数组和字典\n\n初始化空数组和字典：\n\n```swift\nlet emptyArray: [String] = []\nlet emptyDictionary: [String: Float] = [:]\n```\n\n有值数组和字典：\n\n```swift\nvar shoppingList = [\"catfish\", \"water\", \"tulips\"]\nshoppingList[1] = \"bottle of water\"\n\nvar occupations = [\n    \"Malcolm\": \"Captain\",\n    \"Kaylee\": \"Mechanic\",\n]\noccupations[\"Jayne\"] = \"Public Relations\"\n```\n\n#### 控制流\n\n组合遍历和条件语句示例：\n\n```swift\nlet individualScores = [75, 43, 103, 87, 12]\nvar teamScore = 0\nfor score in individualScores {\n    if score > 50 {\n        teamScore += 3\n    } else {\n        teamScore += 1\n    }\n}\nprint(teamScore)\n// Prints \"11\"\n```\n\n**Switch**语句：\n\n```swift\nlet vegetable = \"red pepper\"\nswitch vegetable {\ncase \"celery\":\n    print(\"Add some raisins and make ants on a log.\")\n// 多值匹配\ncase \"cucumber\", \"watercress\":\n    print(\"That would make a good tea sandwich.\")\n// 条件匹配，区域变量\ncase let x where x.hasSuffix(\"pepper\"):\n    print(\"Is it a spicy \\(x)?\")\n// 区间匹配\ncase 1..<5:\n  \tprint('1~5')\ndefault:\n    print(\"Everything tastes good in soup.\")\n}\n// Prints \"Is it a spicy red pepper?\"\n```\n\n> switch 必须包含所有可能的 case，不需要`break`，支持`fallthrough`贯穿\n\n```swift\nlet somePoint = (1,1)\nswitch somePoint {\n  case (0,0)\n     print(\"fail\")\n  case (1,_)\n     print(\"success\")\n  default:\n     print(\"no match\")\n}\n// print：success\n```\n\n","title":"前端工具库","date":"2022/4/4","tags":["Swift"],"mainImg":"https://images.unsplash.com/photo-1496171367470-9ed9a91ea931?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2NDk5NTg5MDA&ixlib=rb-1.2.1&q=80&w=1080","coverImg":"https://images.unsplash.com/photo-1496171367470-9ed9a91ea931?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2NDk5NTg5MDA&ixlib=rb-1.2.1&q=80&w=400","intro":"想要开发原生的 macOS 桌面程序，学习 Swift 是我的第一步。"}},"__N_SSG":true}