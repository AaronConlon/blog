{"pageProps":{"post":{"slug":"JavaScript数组刷题对比与分析","contentHtml":"<h3>Day 1</h3>\n<blockquote>\n<p><a href=\"https://leetcode-cn.com/problems/add-to-array-form-of-integer/submissions/\">989. 数组形式的整数加法 - 力扣（LeetCode）</a></p>\n</blockquote>\n<h4>题目描述</h4>\n<p>对于非负整数 X 而言，X 的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果 X = 1231，那么其数组形式为 [1,2,3,1]。</p>\n<p>给定非负整数 X 的数组形式 A，返回整数 X+K 的数组形式。</p>\n<h5>示例 1：</h5>\n<pre><code class=\"hljs language-js\"><span class=\"lineNumber\">1</span>输入：A = [<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">0</span>], K = <span class=\"hljs-number\">34</span>\n<span class=\"lineNumber\">2</span>输出：[<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">4</span>]\n<span class=\"lineNumber\">3</span>解释：<span class=\"hljs-number\">1200</span> + <span class=\"hljs-number\">34</span> = <span class=\"hljs-number\">1234</span></code></pre> \n\n<h5>思路</h5>\n<ul>\n<li>整数 K 转数组</li>\n<li>确定更长的数组,确定遍历最长的数组 A 或者 K 数组</li>\n<li>末尾 pop() 相加,控制进位</li>\n<li>处理最后的进位,得出结果.</li>\n</ul>\n<h5>我的代码</h5>\n<pre><code class=\"hljs language-js\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\">/**\n<span class=\"lineNumber\">2</span> * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{number[]}</span> <span class=\"hljs-variable\">A</span></span>\n<span class=\"lineNumber\">3</span> * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{number}</span> <span class=\"hljs-variable\">K</span></span>\n<span class=\"lineNumber\">4</span> * <span class=\"hljs-doctag\">@return <span class=\"hljs-type\">{number[]}</span></span>\n<span class=\"lineNumber\">5</span> */</span>\n<span class=\"lineNumber\">6</span><span class=\"hljs-keyword\">var</span> addToArrayForm = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">A, K</span>) </span>{\n<span class=\"lineNumber\">7</span>  <span class=\"hljs-keyword\">let</span> kArr = [...K.toString()].map(<span class=\"hljs-function\"><span class=\"hljs-params\">i</span> =></span> ~~i)\n<span class=\"lineNumber\">8</span>  <span class=\"hljs-keyword\">let</span> {len, maxArr} = kArr.length > A.length ? {<span class=\"hljs-attr\">len</span>: kArr.length, <span class=\"hljs-attr\">maxArr</span>: kArr} : {<span class=\"hljs-attr\">len</span>: A.length, <span class=\"hljs-attr\">maxArr</span>: A}\n<span class=\"lineNumber\">9</span>  <span class=\"hljs-keyword\">let</span> carryNum = <span class=\"hljs-number\">0</span>\n<span class=\"lineNumber\">10</span>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> index = <span class=\"hljs-number\">0</span>; index &#x3C; len; index++) {\n<span class=\"lineNumber\">11</span>    <span class=\"hljs-keyword\">let</span> lastA = ~~A.pop()\n<span class=\"lineNumber\">12</span>    <span class=\"hljs-keyword\">let</span> lastK = ~~kArr.pop()\n<span class=\"lineNumber\">13</span>    <span class=\"hljs-keyword\">let</span> sum = lastA + lastK + carryNum\n<span class=\"lineNumber\">14</span>    <span class=\"hljs-function\"><span class=\"hljs-title\">if</span>(<span class=\"hljs-params\">sum > <span class=\"hljs-number\">9</span></span>)</span> {\n<span class=\"lineNumber\">15</span>      maxArr.unshift(sum - <span class=\"hljs-number\">10</span>)\n<span class=\"lineNumber\">16</span>      carryNum = <span class=\"hljs-number\">1</span>\n<span class=\"lineNumber\">17</span>    } <span class=\"hljs-keyword\">else</span> {\n<span class=\"lineNumber\">18</span>      maxArr.unshift(sum)\n<span class=\"lineNumber\">19</span>      carryNum = <span class=\"hljs-number\">0</span>\n<span class=\"lineNumber\">20</span>    }\n<span class=\"lineNumber\">21</span>  }\n<span class=\"lineNumber\">22</span>  <span class=\"hljs-keyword\">if</span>(carryNum === <span class=\"hljs-number\">1</span>) maxArr.unshift(<span class=\"hljs-number\">1</span>)\n<span class=\"lineNumber\">23</span>  <span class=\"hljs-keyword\">return</span> maxArr\n<span class=\"lineNumber\">24</span>}</code></pre> \n\n<p>执行结果,用时太长,在内存控制方面做得还行.<strong>偏向用空间换时间</strong>.</p>\n<h5>其他人的优秀代码</h5>\n<p>作者：Shawry14\n链接：https://leetcode-cn.com/problems/add-to-array-form-of-integer/solution/shu-zu-xing-shi-de-zheng-shu-jia-fa-nei-60pm8/</p>\n<pre><code class=\"hljs language-js\"><span class=\"lineNumber\">1</span><span class=\"hljs-comment\">/**\n<span class=\"lineNumber\">2</span> * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{number[]}</span> <span class=\"hljs-variable\">A</span></span>\n<span class=\"lineNumber\">3</span> * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{number}</span> <span class=\"hljs-variable\">K</span></span>\n<span class=\"lineNumber\">4</span> * <span class=\"hljs-doctag\">@return <span class=\"hljs-type\">{number[]}</span></span>\n<span class=\"lineNumber\">5</span> */</span>\n<span class=\"lineNumber\">6</span><span class=\"hljs-keyword\">var</span> addToArrayForm = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">A, K</span>) </span>{\n<span class=\"lineNumber\">7</span>    count = <span class=\"hljs-number\">0</span>;\n<span class=\"lineNumber\">8</span>    len = K.toString().length;\n<span class=\"lineNumber\">9</span>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &#x3C; len; i++) {\n<span class=\"lineNumber\">10</span>        <span class=\"hljs-keyword\">if</span> (A.length &#x3C; len) {\n<span class=\"lineNumber\">11</span>            A.unshift(<span class=\"hljs-number\">0</span>);\n<span class=\"lineNumber\">12</span>        }\n<span class=\"lineNumber\">13</span>        count = K % <span class=\"hljs-number\">10</span>;\n<span class=\"lineNumber\">14</span>        K = <span class=\"hljs-built_in\">parseInt</span>(K / <span class=\"hljs-number\">10</span>);\n<span class=\"lineNumber\">15</span>        A[A.length - <span class=\"hljs-number\">1</span> - i] += count;\n<span class=\"lineNumber\">16</span>    }\n<span class=\"lineNumber\">17</span>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &#x3C; A.length; i++) {\n<span class=\"lineNumber\">18</span>        <span class=\"hljs-keyword\">if</span> (A[<span class=\"hljs-number\">0</span>] > <span class=\"hljs-number\">9</span>) {\n<span class=\"lineNumber\">19</span>            A.unshift(<span class=\"hljs-number\">0</span>);\n<span class=\"lineNumber\">20</span>        }\n<span class=\"lineNumber\">21</span>        <span class=\"hljs-keyword\">if</span> (A[A.length - <span class=\"hljs-number\">1</span> - i] > <span class=\"hljs-number\">9</span>) {\n<span class=\"lineNumber\">22</span>            A[A.length - <span class=\"hljs-number\">2</span> - i]++;\n<span class=\"lineNumber\">23</span>            A[A.length - <span class=\"hljs-number\">1</span> - i] = A[A.length - <span class=\"hljs-number\">1</span> - i] % <span class=\"hljs-number\">10</span>;\n<span class=\"lineNumber\">24</span>        }\n<span class=\"lineNumber\">25</span>    }\n<span class=\"lineNumber\">26</span>    <span class=\"hljs-keyword\">return</span> A;\n<span class=\"lineNumber\">27</span>};</code></pre> \n\n<p>太恐怖了.</p>\n<p>思路清奇,把每一位都当做单独的一个数,从右往左相加.再遍历一次,处理每一位的进位,在遍历+1 的时候提前+1,依次遍历.</p>\n<p>最小化内存使用,最小化执行次数.</p>\n<p>佩服.</p>\n","title":"JavaScript数组刷题对比与分析.md","date":"2021/2/3","tags":["LeetCode"],"mainImg":"https://images.unsplash.com/photo-1564879730502-08b4d3b312c2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8&ixlib=rb-1.2.1&q=80&w=1080","coverImg":"https://images.unsplash.com/photo-1564879730502-08b4d3b312c2?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MXwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8&ixlib=rb-1.2.1&q=80&w=400","intro":"参与了一个活动,和两百人一起学习数据结构与算法,一起刷题一起进步.本文记录了我学习数组的时候刷的题目,以及他人优秀的题解."}},"__N_SSG":true}