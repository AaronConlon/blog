{"pageProps":{"post":{"slug":"前端代码风格和错误检查","contentHtml":"<p>最近半个月接手了一个微信小程序开发的任务，团队老大一把梭了项目框架之后就开始安排我跟同事慢慢添砖加瓦。开始写之后我发现我跟同事以及组长的代码风格不一致，一天下午我给组长提了建议使用<code>eslint</code>来检查代码错误，使用<code>prettier</code>统一团队的代码风格，我说这样真的很方便，也有利于我们后续的维护。</p>\n<p>但是，<strong>组长拒绝了我的建议，并且回复我：“这样太麻烦了，你们按我写的风格写就好。”</strong></p>\n<p>某种程度上，我被打击到了。</p>\n<p>这就是我写下这一篇分享的原因。</p>\n<p>这篇分享的内容如下：</p>\n<ul>\n<li>使用<code>eslint</code>检查语法错误和统一代码风格，使用<code>stylelint</code>格式化样式代码</li>\n<li>使用<code>prettier</code>兼容<code>eslint</code>和<code>stylelint</code>以格式化代码</li>\n<li>使用<code>husky</code>添加<code>git</code>工作流<code>hooks</code>，保障提交前格式化代码，并且规范化<code>commit</code>信息</li>\n</ul>\n","title":"前端代码风格和错误检查","date":"2021/8/3","tags":["前端"],"mainImg":"https://images.unsplash.com/photo-1477039181047-efb4357d01bd?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2Mjc5Mjc1MjY&ixlib=rb-1.2.1&q=80&w=1080","coverImg":"https://images.unsplash.com/photo-1477039181047-efb4357d01bd?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxNjUyNjZ8MHwxfHJhbmRvbXx8fHx8fHx8fDE2Mjc5Mjc1MjY&ixlib=rb-1.2.1&q=80&w=400","intro":"前端开发中的代码检查和风格规范解决方案，使用 eslint 检查语法错误，使用 Prettier 格式化代码，使用 husky 添加 git 钩子，让团队协作开发拥有更好的体验。"}},"__N_SSG":true}