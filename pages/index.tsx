import { GetServerSideProps, GetStaticProps } from "next";

import { BLOG_ARTICLE_DIR } from "@/configs/index";
import Head from "next/head";
import { IDirRecord } from "@/interfaces/article";
import { IUserInfo } from "@/interfaces/userInfo";
import Image from "next/image";
import MiniArticle from "@/components/MiniArticle";
import type { NextPage } from "next";
import axios from "axios";
import { request } from "@/utils/request";
import { scanArticleDir } from "@/utils";
import styles from "@/styles/masonry.module.scss";

const Home: NextPage = ({ dirInfo }: { dirInfo: IDirRecord }) => {
  const tagRecord = {};

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex px-4">
        <aside className="bg-purple-50 p-4">
          <ul className="w-[240px]">
            {dirInfo.children.map((i, idx) => (
              <li key={idx}>{i.dirName}</li>
            ))}
          </ul>
        </aside>
        <section className="flex-grow p-8">
          <ul className={styles.masonry}>
            {dirInfo.articleList.map((i, idx) => (
              <li
                key={idx}
                className="rounded-md block bg-gray-50 mb-8 break-inside-avoid"
              >
                <MiniArticle {...i} />
              </li>
            ))}
          </ul>
        </section>
      </div>
    </>
  );
};

export default Home;

// return props to current page component as props
export const getStaticProps: GetStaticProps = async (context) => {
  const dirInfo = await scanArticleDir(BLOG_ARTICLE_DIR);
  // console.log("dirInfo:", dirInfo.children);
  const tagRecord = { ALL: [] };
  dirInfo.articleList.forEach((item) => {
    const { tags } = item;
    tags.forEach((tag) => {
      if (tagRecord[tag] === undefined) {
        tagRecord[tag] = [item];
      } else {
        tagRecord[tag].push(item);
      }
    });
    tagRecord["ALL"].push(item);
  });
  // await fetch("http://localhost:3000/api/post");
  const userInfo = await request.get<IUserInfo>("/api/about");

  return {
    props: {
      dirInfo,
      userInfo,
    },
  };
};
